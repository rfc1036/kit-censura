#!/bin/bash

source config.sh

cd $PATH_pscaiip

test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - Invoking AAIP Privacy Shield Client" >> $LOGFILE
docker-compose exec app bash -c "php application schedule:run" >> $LOGFILE
DOCKER_RETURN=$?


if [ $DOCKER_RETURN != 0 ] ; then
   SUBJECT="Error while running Privacy Shield Client"
   TXT="Privacy Shield Client on $(hostname --fqdn) have failed and returned $DOCKER_RETURN"
   if [ $ALERT_ENABLE == true ] && [ "x$NOC_EMAIL" != 'x' ] ; then
	echo -e "Subject: $SUBJECT\nFrom:$FROM_EMAIL\n$TXT" | sendmail $NOC_EMAIL
   fi
   test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - AAIP Privacy Shield Client returned Error: $TXT" >> $LOGFILE
   echo "Warning: $TXT" >&2
else
    test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - AAIP Privacy Shield Client Ended" >> $LOGFILE
fi
cd /root/kit-censura

#copying files from AAIP Privacy Shield Client
test -e "$PATH_pscaiip_fqdn"   && cp $PATH_pscaiip_fqdn $FILE_pscaiip
if [ -e "$PATH_pscaiip_ipv4" ] ; then 
	cat $PATH_pscaiip_ipv4 > $FILE_pscaiip-ip
	test -e "$PATH_pscaiip_ipv6"  && cat $PATH_pscaiip_ipv6 >> $FILE_pscaiip-ip
else
	test -e "$PATH_pscaiip_ipv6" && cat $PATH_pscaiip_ipv6 > $FILE_pscaiip-ip
fi


if [ -e "$FILE_pscaiip" ]; then
  egrep '^[^#]' $FILE_pscaiip | sed 's~http[s]*://~~g' | sort | uniq > lists/pscaiip.new.tmp
  #cp $FILE_pscaiip lists/pscaiip.new.tmp
  #egrep '^[^#]' $FILE_pscaiip  |  sort  |  uniq  >  lists/pscaiip.new.tmp
  mv lists/pscaiip.new.tmp lists/pscaiip.new
   test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - Imported list of FQDN  $FILE_pscaiip" >> $LOGFILE
elif [ ! -e lists/pscaiip.new ]; then
  : > lists/pscaiip.new
fi

# allow manual add of specific IPs if file exists (ex lista.pscaiip-ip)
  if [ -e $FILE_pscaiip-ip ]; then
        egrep '^[^#]' $FILE_pscaiip-ip | sort | uniq > lists/pscaiip-ip
	test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - Imported list of IP  $FILE_pscaiip-ip" >> $LOGFILE
  fi

test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%M:%S') - Import pscaiip Completed" >> $LOGFILE
